<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.collagelone.backend.dao.mapper.CollageOrderMapper" >
  <resultMap id="BaseResultMap" type="com.collagelone.backend.dao.entity.CollageOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_address_from" property="orderAddressFrom" jdbcType="VARCHAR" />
    <result column="order_address_to" property="orderAddressTo" jdbcType="VARCHAR" />
    <result column="order_address_from_code" property="orderAddressFromCode" jdbcType="VARCHAR" />
    <result column="order_address_to_code" property="orderAddressToCode" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="VARCHAR" />
    <result column="order_amount_fare" property="orderAmountFare" jdbcType="VARCHAR" />
    <result column="order_begin_time" property="orderBeginTime" jdbcType="DATE" />
    <result column="order_end_time" property="orderEndTime" jdbcType="DATE" />
    <result column="order_msc" property="orderMsc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del" property="del" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, order_address_from, order_address_to, order_address_from_code, order_address_to_code, 
    order_type, order_status, user_phone, order_price, order_amount, order_amount_fare, 
    order_begin_time, order_end_time, order_msc, create_time, update_time, del
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from collage_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from collage_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.collagelone.backend.dao.entity.CollageOrder" >
  <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
   </selectKey>
    insert into collage_order (id, user_id, order_address_from, 
      order_address_to, order_address_from_code, order_address_to_code, 
      order_type, order_status, user_phone, 
      order_price, order_amount, order_amount_fare, 
      order_begin_time, order_end_time, order_msc, 
      create_time, update_time, del
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{orderAddressFrom,jdbcType=VARCHAR}, 
      #{orderAddressTo,jdbcType=VARCHAR}, #{orderAddressFromCode,jdbcType=VARCHAR}, #{orderAddressToCode,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=TINYINT}, #{orderStatus,jdbcType=TINYINT}, #{userPhone,jdbcType=VARCHAR}, 
      #{orderPrice,jdbcType=VARCHAR}, #{orderAmount,jdbcType=VARCHAR}, #{orderAmountFare,jdbcType=VARCHAR}, 
      #{orderBeginTime,jdbcType=DATE}, #{orderEndTime,jdbcType=DATE}, #{orderMsc,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{del,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.collagelone.backend.dao.entity.CollageOrder" >
  	<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
     </selectKey>
    insert into collage_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderAddressFrom != null" >
        order_address_from,
      </if>
      <if test="orderAddressTo != null" >
        order_address_to,
      </if>
      <if test="orderAddressFromCode != null" >
        order_address_from_code,
      </if>
      <if test="orderAddressToCode != null" >
        order_address_to_code,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="orderAmountFare != null" >
        order_amount_fare,
      </if>
      <if test="orderBeginTime != null" >
        order_begin_time,
      </if>
      <if test="orderEndTime != null" >
        order_end_time,
      </if>
      <if test="orderMsc != null" >
        order_msc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="del != null" >
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderAddressFrom != null" >
        #{orderAddressFrom,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressTo != null" >
        #{orderAddressTo,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressFromCode != null" >
        #{orderAddressFromCode,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressToCode != null" >
        #{orderAddressToCode,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=VARCHAR},
      </if>
      <if test="orderAmountFare != null" >
        #{orderAmountFare,jdbcType=VARCHAR},
      </if>
      <if test="orderBeginTime != null" >
        #{orderBeginTime,jdbcType=DATE},
      </if>
      <if test="orderEndTime != null" >
        #{orderEndTime,jdbcType=DATE},
      </if>
      <if test="orderMsc != null" >
        #{orderMsc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        #{del,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.collagelone.backend.dao.entity.CollageOrder" >
    update collage_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderAddressFrom != null" >
        order_address_from = #{orderAddressFrom,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressTo != null" >
        order_address_to = #{orderAddressTo,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressFromCode != null" >
        order_address_from_code = #{orderAddressFromCode,jdbcType=VARCHAR},
      </if>
      <if test="orderAddressToCode != null" >
        order_address_to_code = #{orderAddressToCode,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=VARCHAR},
      </if>
      <if test="orderAmountFare != null" >
        order_amount_fare = #{orderAmountFare,jdbcType=VARCHAR},
      </if>
      <if test="orderBeginTime != null" >
        order_begin_time = #{orderBeginTime,jdbcType=DATE},
      </if>
      <if test="orderEndTime != null" >
        order_end_time = #{orderEndTime,jdbcType=DATE},
      </if>
      <if test="orderMsc != null" >
        order_msc = #{orderMsc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        del = #{del,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.collagelone.backend.dao.entity.CollageOrder" >
    update collage_order
    set user_id = #{userId,jdbcType=BIGINT},
      order_address_from = #{orderAddressFrom,jdbcType=VARCHAR},
      order_address_to = #{orderAddressTo,jdbcType=VARCHAR},
      order_address_from_code = #{orderAddressFromCode,jdbcType=VARCHAR},
      order_address_to_code = #{orderAddressToCode,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=TINYINT},
      order_status = #{orderStatus,jdbcType=TINYINT},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=VARCHAR},
      order_amount = #{orderAmount,jdbcType=VARCHAR},
      order_amount_fare = #{orderAmountFare,jdbcType=VARCHAR},
      order_begin_time = #{orderBeginTime,jdbcType=DATE},
      order_end_time = #{orderEndTime,jdbcType=DATE},
      order_msc = #{orderMsc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>